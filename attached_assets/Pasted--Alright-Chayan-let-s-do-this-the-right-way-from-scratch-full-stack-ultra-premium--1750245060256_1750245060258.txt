üí° Alright Chayan, let‚Äôs do this the **right** way ‚Äî from scratch, full-stack, ultra-premium.

---

# üöÄ PROJECT INIT PLAN ‚Äî "Peter Digital Shop" (Phase 0 ‚Üí Boot Project in Replit)

This is the **foundational kick-off** plan for Replit AI Agent to **create a full-stack, live-use ready gift card shop** powered by Square APIs. We'll go step-by-step ‚Äî no skipped features, no half-done logic, no UI mock trash.

---

## üî• STACK OVERVIEW

* **Frontend**: React + Tailwind CSS (with Framer Motion for animations, Lucide for icons)
* **Backend**: Node.js + Express + TypeScript
* **DB**: Supabase (can fallback to SQLite/PostgreSQL if offline)
* **UI Theme**: Ultra Luxurious Dark Mode ‚ú® (Glassmorphic, Animated, Premium)
* **Brand**: `Peter Digital Shop`

---

## üì¶ DIRECTORY STRUCTURE (Replit AI MUST FOLLOW)

```
/peter-digital-shop
‚îú‚îÄ‚îÄ client/                   # React Frontend (UI)
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/       # All animated UI blocks
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pages/            # Home, Checkout, Success, etc.
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ routes/           # Client-side routing
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ index.tsx
‚îÇ   ‚îî‚îÄ‚îÄ tailwind.config.ts
‚îú‚îÄ‚îÄ server/                   # Node.js Backend (Gift Card logic)
‚îÇ   ‚îú‚îÄ‚îÄ routes/               # /gift-cards, /webhooks, /customers
‚îÇ   ‚îú‚îÄ‚îÄ controllers/          # Business logic
‚îÇ   ‚îú‚îÄ‚îÄ services/             # Square API wrappers
‚îÇ   ‚îú‚îÄ‚îÄ db/                   # Supabase client + schema
‚îÇ   ‚îî‚îÄ‚îÄ index.ts              # Express entry point
‚îú‚îÄ‚îÄ .env                      # API Keys
‚îú‚îÄ‚îÄ replit.nix                # Replit config
‚îî‚îÄ‚îÄ README.md
```

---

## üß± STEP-BY-STEP PHASE 0 BUILD PLAN

### ‚úÖ STEP 1 ‚Äì Project Initialization (Code for Replit Agent)

```bash
npx create-react-app client --template typescript
mkdir server
cd server && npm init -y && npm install express cors dotenv @square/square uuid supabase-js && tsc --init
```

---

### ‚úÖ STEP 2 ‚Äì Tailwind + Animation Setup (in `/client`)

**Install Tailwind:**

```bash
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
```

**tailwind.config.ts:**

```ts
module.exports = {
  content: ["./src/**/*.{js,ts,jsx,tsx}"],
  darkMode: "class",
  theme: {
    extend: {
      fontFamily: {
        display: ['"Poppins"', "sans-serif"],
      },
    },
  },
  plugins: [],
};
```

**src/index.css:**

```css
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Glass morphism + Neon Animations */
:root {
  --primary: #7f5af0;
  --bg-dark: #0f0f0f;
  --glass: rgba(255, 255, 255, 0.05);
}

body {
  @apply bg-black text-white font-display;
}
```

---

### ‚úÖ STEP 3 ‚Äì Backend Server Bootstrap

**server/index.ts**

```ts
import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';

dotenv.config();
const app = express();
app.use(cors());
app.use(express.json());

import giftCardRoutes from './routes/giftCards';
import webhookRoutes from './routes/webhooks';

app.use('/api/gift-cards', giftCardRoutes);
app.use('/api/webhooks', webhookRoutes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`üü¢ Server running on port ${PORT}`));
```

---

### ‚úÖ STEP 4 ‚Äì Create Square Gift Card Base Route

**server/routes/giftCards.ts**

```ts
import { Router } from 'express';
import { issueGiftCard } from '../controllers/GiftCardController';

const router = Router();
router.post('/issue', issueGiftCard);
export default router;
```

**server/controllers/GiftCardController.ts**

```ts
import { Request, Response } from 'express';
import { SquareGiftCardService } from '../services/SquareGiftCardService';

export async function issueGiftCard(req: Request, res: Response) {
  try {
    const card = await SquareGiftCardService.issue();
    res.json(card);
  } catch (err) {
    res.status(500).json({ error: 'Failed to issue gift card', details: err });
  }
}
```

**server/services/SquareGiftCardService.ts**

```ts
import { Client, Environment } from 'square';

const client = new Client({
  environment: process.env.SQUARE_ENVIRONMENT === 'production' ? Environment.Production : Environment.Sandbox,
  accessToken: process.env.SQUARE_ACCESS_TOKEN,
});

export const SquareGiftCardService = {
  async issue() {
    const { result } = await client.giftCardsApi.createGiftCard({
      idempotencyKey: Date.now().toString(),
      locationId: process.env.SQUARE_LOCATION_ID,
      giftCard: { type: 'DIGITAL' },
    });
    return result.giftCard;
  },
};
```

---

### ‚úÖ STEP 5 ‚Äì Fancy Premium Home UI (React)

**client/src/pages/Home.tsx**

```tsx
import { motion } from "framer-motion";

export default function Home() {
  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-black via-gray-900 to-black">
      <motion.h1
        className="text-5xl font-bold text-white neon-glow"
        initial={{ opacity: 0, y: -50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1.2 }}
      >
        üéÅ Peter Digital Shop
      </motion.h1>
      <p className="mt-4 text-lg text-gray-400">Buy. Send. Redeem. Instantly.</p>
    </div>
  );
}
```

---

## üîê ENV SETUP (.env)

```
SQUARE_ACCESS_TOKEN=REPLACE_ME
SQUARE_LOCATION_ID=REPLACE_ME
SQUARE_ENVIRONMENT=sandbox
```

---